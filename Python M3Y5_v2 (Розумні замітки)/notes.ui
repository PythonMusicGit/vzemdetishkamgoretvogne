<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>900</width>
    <height>600</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
    background-color: #f0e6d2; /* Light beige or off-white background for an old-school look */
    color: #2e2a47; /* Dark brown text to mimic older computer displays */
    font-family: 'Times New Roman', serif; /* Classic serif font for vintage feel */
    font-size: 14px; /* Standard font size for readability */
    border: 2px solid #d3b897; /* Soft brown border to give it an aged frame appearance */
    border-radius: 8px; /* Slightly rounded corners for a softer vintage frame */
    padding: 15px;
}

QMainWindow::separator {
    background-color: #d3b897; /* Soft brown color for separators */
    width: 2px; /* Thin separators */
}

QMainWindow::separator:horizontal {
    height: 2px; /* Horizontal separator height */
}

QMainWindow::separator:vertical {
    width: 2px; /* Vertical separator width */
}

QMenuBar {
    background-color: #c5b88b; /* A muted gold or beige color for the menu bar */
    color: #2e2a47; /* Dark brown text color for a vintage contrast */
    font-family: 'Times New Roman', serif; /* Matching classic font */
    font-size: 15px;
    padding: 4px;
    border-bottom: 2px solid #d3b897; /* Light brown border at the bottom */
}

QMenuBar::item {
    padding: 5px 15px;
    background-color: #c5b88b; /* Same color for each menu item background */
    border-radius: 5px;
}

QMenuBar::item:selected {
    background-color: #b89f6d; /* Slightly darker gold for selected items */
    color: #ffffff; /* White text when an item is selected */
}

QMenu {
    background-color: #e7dcb5; /* Light beige background for the dropdown menu */
    border: 1px solid #d3b897; /* Soft brown border for the menu */
    border-radius: 5px; /* Rounded corners for menu items */
}

QMenu::item {
    padding: 8px 12px;
    background-color: #e7dcb5; /* Consistent light beige background */
    color: #2e2a47; /* Dark text color for readability */
}

QMenu::item:selected {
    background-color: #d3b897; /* Brown background on hover */
    color: #ffffff; /* White text when selected */
}

QToolBar {
    background-color: #f0e6d2; /* Off-white background for the toolbar */
    border: 1px solid #d3b897; /* Border around the toolbar */
    spacing: 10px;
}

QToolBar::handle {
    background-color: #d3b897; /* Soft brown handle color */
    width: 8px; /* Thin toolbar handle */
}

QStatusBar {
    background-color: #f0e6d2; /* Same light beige background for consistency */
    color: #2e2a47; /* Dark text for the status bar */
    border-top: 1px solid #d3b897; /* Light border on top */
}

QPushButton {
    background-color: #c5b88b; /* Muted gold background for buttons */
    color: #2e2a47; /* Dark brown text color */
    border: 2px solid #d3b897; /* Soft brown border around buttons */
    font-family: 'Times New Roman', serif; /* Matching serif font */
    font-size: 14px;
    padding: 8px 15px;
    border-radius: 5px;
    transition: all 0.3s ease;
}

QPushButton:hover {
    background-color: #b89f6d; /* Darker gold background on hover */
    color: #ffffff; /* White text when hovered */
}

QPushButton:pressed {
    background-color: #a47b4d; /* Even darker brown on button press */
    color: #ffffff; /* White text on press */
}
</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QTextEdit" name="field_text">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>370</y>
      <width>551</width>
      <height>181</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QTextEdit {
    background-color: #1b1b1b; /* Dark, eerie background */
    color: #00ff00; /* Neon green text for an unsettling effect */
    font-family: 'Courier New', Courier, monospace; /* Typewriter font for a retro vibe */
    font-size: 16px;
    border: 2px solid #ff00ff; /* Bright magenta border to enhance the weirdcore vibe */
    border-radius: 10px;
    padding: 10px;
    box-shadow: 0 0 10px #ff00ff, 0 0 15px #00ff00; /* Glowing border effect */
    caret-color: #ff00ff; /* The cursor will be a glowing magenta */
}

QTextEdit:focus {
    background-color: #222222; /* Slightly lighter background when focused */
    color: #ff00ff; /* Change text to magenta when focused */
    border-color: #00ff00; /* Change border to neon green when focused */
}

QTextEdit QScrollBar {
    background-color: #1b1b1b; /* Same dark color for the scrollbar */
    border: none;
    width: 10px;
}

QTextEdit QScrollBar::handle {
    background-color: #ff00ff; /* Bright magenta scrollbar handle */
    border-radius: 5px;
}

QTextEdit QScrollBar::handle:hover {
    background-color: #00ff00; /* Hover effect to change the scrollbar handle to neon green */
}

QTextEdit QScrollBar::add-line, QTextEdit QScrollBar::sub-line {
    background: none;
    border: none;
}
</string>
    </property>
   </widget>
   <widget class="QListWidget" name="listWidget">
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>60</y>
      <width>256</width>
      <height>192</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QListWidget {
    background-color: #121212; /* Dark background for a creepy, unsettling vibe */
    color: #00ff00; /* Neon green text for a stark contrast */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter font */
    font-size: 16px;
    border: 2px solid #ff00ff; /* Glowing magenta border around the list */
    border-radius: 10px; /* Slightly rounded corners */
    padding: 10px;
    selection-color: #ff00ff; /* Magenta text when an item is selected */
    selection-background-color: #00ff00; /* Neon green background for selected items */
    outline: none; /* Remove the default outline */
    box-shadow: 0 0 10px #ff00ff, 0 0 20px #00ff00; /* Glowing effect around the list */
}

QListWidget::item {
    padding: 8px;
    background-color: #1b1b1b; /* Dark background for each item */
    border-radius: 5px; /* Slight curve on item edges */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QListWidget::item:hover {
    background-color: #222222; /* Slightly lighter background when hovered */
    color: #ff00ff; /* Text turns magenta on hover */
    box-shadow: 0 0 15px #ff00ff, 0 0 25px #00ff00; /* Glowing effect on hover */
}

QListWidget::item:selected {
    background-color: #00ff00; /* Neon green background for selected items */
    color: #ff00ff; /* Magenta text for selected items */
    box-shadow: inset 0 0 20px #ff00ff, inset 0 0 25px #00ff00; /* Inset glowing effect for selection */
}

QListWidget::item:active {
    background-color: #111111; /* Darker background when clicked */
    color: #00ff00; /* Green text when active */
    box-shadow: inset 0 0 20px #ff00ff, inset 0 0 30px #00ff00; /* Intense glowing effect when clicked */
}

QListWidget::item:focus {
    outline: none; /* Remove focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QScrollBar {
    background-color: #121212; /* Same dark background for the scrollbar */
    width: 12px;
    border-radius: 6px;
}

QScrollBar::handle {
    background-color: #ff00ff; /* Magenta scrollbar handle */
    border-radius: 6px;
}

QScrollBar::handle:hover {
    background-color: #00ff00; /* Hover effect with green handle */
}

QScrollBar::add-line, QScrollBar::sub-line {
    background: none;
    border: none;
}
</string>
    </property>
   </widget>
   <widget class="QListWidget" name="listWidget_2">
    <property name="geometry">
     <rect>
      <x>280</x>
      <y>70</y>
      <width>361</width>
      <height>111</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QListWidget {
    background-color: #121212; /* Dark background for a creepy, unsettling vibe */
    color: #00ff00; /* Neon green text for a stark contrast */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter font */
    font-size: 16px;
    border: 2px solid #ff00ff; /* Glowing magenta border around the list */
    border-radius: 10px; /* Slightly rounded corners */
    padding: 10px;
    selection-color: #ff00ff; /* Magenta text when an item is selected */
    selection-background-color: #00ff00; /* Neon green background for selected items */
    outline: none; /* Remove the default outline */
    box-shadow: 0 0 10px #ff00ff, 0 0 20px #00ff00; /* Glowing effect around the list */
}

QListWidget::item {
    padding: 8px;
    background-color: #1b1b1b; /* Dark background for each item */
    border-radius: 5px; /* Slight curve on item edges */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QListWidget::item:hover {
    background-color: #222222; /* Slightly lighter background when hovered */
    color: #ff00ff; /* Text turns magenta on hover */
    box-shadow: 0 0 15px #ff00ff, 0 0 25px #00ff00; /* Glowing effect on hover */
}

QListWidget::item:selected {
    background-color: #00ff00; /* Neon green background for selected items */
    color: #ff00ff; /* Magenta text for selected items */
    box-shadow: inset 0 0 20px #ff00ff, inset 0 0 25px #00ff00; /* Inset glowing effect for selection */
}

QListWidget::item:active {
    background-color: #111111; /* Darker background when clicked */
    color: #00ff00; /* Green text when active */
    box-shadow: inset 0 0 20px #ff00ff, inset 0 0 30px #00ff00; /* Intense glowing effect when clicked */
}

QListWidget::item:focus {
    outline: none; /* Remove focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QScrollBar {
    background-color: #121212; /* Same dark background for the scrollbar */
    width: 12px;
    border-radius: 6px;
}

QScrollBar::handle {
    background-color: #ff00ff; /* Magenta scrollbar handle */
    border-radius: 6px;
}

QScrollBar::handle:hover {
    background-color: #00ff00; /* Hover effect with green handle */
}

QScrollBar::add-line, QScrollBar::sub-line {
    background: none;
    border: none;
}
</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_note_create">
    <property name="geometry">
     <rect>
      <x>610</x>
      <y>380</y>
      <width>271</width>
      <height>41</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Створити замітку</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_note_del">
    <property name="geometry">
     <rect>
      <x>630</x>
      <y>430</y>
      <width>251</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Видалити замітку</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_note_save">
    <property name="geometry">
     <rect>
      <x>180</x>
      <y>260</y>
      <width>261</width>
      <height>71</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Зберегти замітку</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_tag_add">
    <property name="geometry">
     <rect>
      <x>490</x>
      <y>240</y>
      <width>391</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Додати до замітки</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_tag_del">
    <property name="geometry">
     <rect>
      <x>490</x>
      <y>300</y>
      <width>391</width>
      <height>61</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Відкріпити від замітки</string>
    </property>
   </widget>
   <widget class="QPushButton" name="button_tag_search">
    <property name="geometry">
     <rect>
      <x>580</x>
      <y>490</y>
      <width>311</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
    background-color: #2b2b2b; /* Dark, grim background */
    color: #ff00ff; /* Neon pink text */
    font-family: 'Courier New', Courier, monospace; /* Retro, typewriter-style font */
    font-size: 18px;
    border: 2px solid #00ff00; /* Neon green border */
    border-radius: 20px; /* Rounded corners */
    padding: 12px 24px;
    text-align: center;
    text-transform: uppercase; /* Text capitalized for a strange, harsh feel */
    box-shadow: 0 0 12px #ff00ff, 0 0 20px #00ff00; /* Glowing effects */
    transition: all 0.3s ease; /* Smooth transition for hover effect */
}

QPushButton:hover {
    background-color: #222222; /* Slightly darker background on hover */
    color: #00ff00; /* Change text to neon green on hover */
    border-color: #ff00ff; /* Invert the border color to magenta on hover */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effects */
}

QPushButton:pressed {
    background-color: #1a1a1a; /* Darker background when pressed */
    color: #ff00ff; /* Keep neon pink text when pressed */
    border-color: #ff00ff; /* Border stays magenta */
    box-shadow: inset 0 0 15px #ff00ff, inset 0 0 20px #00ff00; /* Inset glowing effect when pressed */
}

QPushButton:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 20px #ff00ff, 0 0 20px #00ff00; /* Keep glowing effect when focused */
}

QPushButton QIcon {
    filter: hue-rotate(180deg); /* Rotate the hue of any icons for a surreal touch */
}

</string>
    </property>
    <property name="text">
     <string>Шукати замітки за тегом</string>
    </property>
   </widget>
   <widget class="QLabel" name="list_notes_label">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>261</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
    font-family: 'Comic Sans MS', Comic Sans, cursive; /* Comic Sans font for a quirky, nostalgic feel */
    font-size: 24px; /* Slightly larger font for dreamlike text */
    color: #ffb3e6; /* Soft pastel pink color */
    background-color: #e6f7ff; /* Light pastel blue background for a dreamy effect */
    border: 2px solid #ffccff; /* Light purple border to enhance the dreamy feel */
    border-radius: 15px; /* Rounded corners for a softer, dreamlike appearance */
    padding: 15px;
    text-align: center; /* Center the text for symmetry and balance */
    box-shadow: 0 0 20px rgba(255, 182, 233, 0.8); /* Soft pink glowing effect around the label */
    opacity: 0.9; /* Slight transparency for a dreamy, ethereal feel */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effects */
}

QLabel:hover {
    background-color: #ffffff; /* Lighten the background on hover for a subtle change */
    color: #ff66cc; /* Change the text color to a more vibrant pink on hover */
    box-shadow: 0 0 30px rgba(255, 182, 233, 1); /* Stronger glow on hover for emphasis */
}

QLabel:focus {
    outline: none; /* Remove focus outline */
    box-shadow: 0 0 30px rgba(255, 182, 233, 1), 0 0 40px rgba(255, 204, 255, 0.5); /* Enhanced glowing focus effect */
}

</string>
    </property>
    <property name="text">
     <string>Список заміток</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_2">
    <property name="geometry">
     <rect>
      <x>280</x>
      <y>0</y>
      <width>341</width>
      <height>61</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
    font-family: 'Comic Sans MS', Comic Sans, cursive; /* Comic Sans font for a quirky, nostalgic feel */
    font-size: 24px; /* Slightly larger font for dreamlike text */
    color: #ffb3e6; /* Soft pastel pink color */
    background-color: #e6f7ff; /* Light pastel blue background for a dreamy effect */
    border: 2px solid #ffccff; /* Light purple border to enhance the dreamy feel */
    border-radius: 15px; /* Rounded corners for a softer, dreamlike appearance */
    padding: 15px;
    text-align: center; /* Center the text for symmetry and balance */
    box-shadow: 0 0 20px rgba(255, 182, 233, 0.8); /* Soft pink glowing effect around the label */
    opacity: 0.9; /* Slight transparency for a dreamy, ethereal feel */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effects */
}

QLabel:hover {
    background-color: #ffffff; /* Lighten the background on hover for a subtle change */
    color: #ff66cc; /* Change the text color to a more vibrant pink on hover */
    box-shadow: 0 0 30px rgba(255, 182, 233, 1); /* Stronger glow on hover for emphasis */
}

QLabel:focus {
    outline: none; /* Remove focus outline */
    box-shadow: 0 0 30px rgba(255, 182, 233, 1), 0 0 40px rgba(255, 204, 255, 0.5); /* Enhanced glowing focus effect */
}

</string>
    </property>
    <property name="text">
     <string>Список тегів</string>
    </property>
   </widget>
   <widget class="QLineEdit" name="field_tag">
    <property name="geometry">
     <rect>
      <x>490</x>
      <y>190</y>
      <width>391</width>
      <height>41</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLineEdit {
    font-family: 'Press Start 2P', monospace; /* Glitch-style font for a techy, malfunctioning look */
    font-size: 18px; /* Size adjusted for readability */
    color: #ff00ff; /* Neon magenta text color for the glitch effect */
    background-color: #1b1b1b; /* Dark background to contrast the neon text */
    border: 2px solid #00ff00; /* Neon green border to create a glowing effect */
    border-radius: 10px; /* Rounded corners for a slightly softened look */
    padding: 10px;
    text-align: left; /* Align the text to the left */
    box-shadow: 0 0 10px #ff00ff, 0 0 15px #00ff00; /* Glowing neon effect */
    transition: all 0.2s ease-in-out; /* Smooth transition for hover and focus effects */
    outline: none; /* Remove the default outline */
}

QLineEdit:focus {
    background-color: #111111; /* Darker background when focused */
    color: #00ff00; /* Neon green text color when focused */
    border-color: #ff00ff; /* Switch border to neon pink when focused */
    box-shadow: 0 0 25px #ff00ff, 0 0 35px #00ff00; /* Stronger glowing effect when focused */
}

QLineEdit:hover {
    background-color: #222222; /* Slightly lighter background on hover */
    color: #ff00ff; /* Change text color to neon pink when hovering */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Stronger glowing effect on hover */
}

QLineEdit:invalid {
    border-color: #ff0000; /* Red border when input is invalid */
    background-color: #3b3b3b; /* Dark background for invalid input */
    color: #ff0000; /* Red text color when invalid */
}

QLineEdit::placeholder {
    color: #cccccc; /* Light gray color for placeholder text */
    opacity: 0.7; /* Slight opacity for placeholder text */
    font-style: italic; /* Italicize the placeholder text */
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="placeholderText">
     <string>Введіть тег...</string>
    </property>
   </widget>
   <widget class="QCalendarWidget" name="calendarWidget">
    <property name="geometry">
     <rect>
      <x>710</x>
      <y>30</y>
      <width>192</width>
      <height>144</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QCalendarWidget {
    background-color: #121212; /* Dark background for a glitchy, high-tech feel */
    color: #ff00ff; /* Neon magenta text for a glitchy effect */
    font-family: 'Press Start 2P', monospace; /* Glitch-style font for that retro, techy vibe */
    font-size: 16px; /* Adjusted font size for readability */
    border: 3px solid #00ff00; /* Neon green border for a glowing effect */
    border-radius: 12px; /* Rounded corners for a softer, futuristic appearance */
    padding: 10px;
    box-shadow: 0 0 15px rgba(255, 0, 255, 0.8), 0 0 20px rgba(0, 255, 0, 0.8); /* Glowing neon effect */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover and focus effects */
}

QCalendarWidget QToolButton {
    background-color: transparent; /* Transparent buttons for a glitchy effect */
    border: none;
    color: #ff00ff; /* Neon magenta text color */
    font-size: 18px; /* Adjusted font size for the buttons */
    padding: 5px;
    transition: all 0.2s ease-in-out;
}

QCalendarWidget QToolButton:hover {
    background-color: #333333; /* Slightly darker background when hovering */
    color: #00ff00; /* Neon green text when hovering */
    box-shadow: 0 0 10px #ff00ff, 0 0 15px #00ff00; /* Glowing effect on hover */
}

QCalendarWidget QDateTimeEdit {
    background-color: #121212; /* Same dark background for datetime inputs */
    color: #ff00ff; /* Neon magenta text for datetime fields */
    border: 2px solid #00ff00; /* Green border for the datetime inputs */
    border-radius: 8px;
    padding: 5px;
}

QCalendarWidget QDateTimeEdit:focus {
    background-color: #333333; /* Darker background when focused */
    color: #00ff00; /* Neon green text color */
    border-color: #ff00ff; /* Magenta border when focused */
    box-shadow: 0 0 15px #ff00ff, 0 0 20px #00ff00; /* Glowing effect when focused */
}

QCalendarWidget::selected {
    background-color: #00ff00; /* Neon green background for selected dates */
    color: #ff00ff; /* Magenta text for selected dates */
    box-shadow: inset 0 0 10px #ff00ff, inset 0 0 15px #00ff00; /* Inset glow for selected dates */
}

QCalendarWidget::item {
    background-color: #1b1b1b; /* Dark background for each date */
    color: #ff00ff; /* Neon magenta text for dates */
    border-radius: 5px; /* Slightly rounded corners for each date */
    padding: 8px;
    transition: all 0.3s ease-in-out; /* Smooth transition for hover effects */
}

QCalendarWidget::item:hover {
    background-color: #333333; /* Darker background on hover */
    color: #00ff00; /* Neon green text color on hover */
    box-shadow: 0 0 15px #ff00ff, 0 0 20px #00ff00; /* Glowing effect on hover */
}

QCalendarWidget::item:focused {
    background-color: #222222; /* Slightly darker background for focused date */
    color: #ff00ff; /* Magenta text for focused date */
    border: 1px solid #00ff00; /* Neon green border for focused date */
    box-shadow: 0 0 20px #ff00ff, 0 0 30px #00ff00; /* Glowing focus effect */
}

QCalendarWidget::monthNavigationButton {
    background-color: transparent; /* Transparent background for month navigation buttons */
    border: none;
    color: #ff00ff; /* Neon magenta text for navigation */
}

QCalendarWidget::monthNavigationButton:hover {
    background-color: #333333; /* Darker background when hovering */
    color: #00ff00; /* Neon green text for hover effect */
    box-shadow: 0 0 15px #ff00ff, 0 0 20px #00ff00; /* Glowing effect on hover */
}

</string>
    </property>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>900</width>
     <height>36</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources/>
 <connections/>
</ui>
